Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

Example:

Input: n = 4, k = 2
Output:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]


-------------------------------------------
class Solution {
public:
    void dfs(vector<vector<int>> &v, vector<int> &tmp, int &n, int &k, int p) {
        if (tmp.size() > k) {
            return;
        }
        if (tmp.size() == k) {
            v.push_back(tmp);
            return;
        }
        for (int i = p + 1; i <= n; i++) {
            tmp.push_back(i);
            dfs(v, tmp, n, k, i);
            tmp.pop_back();
        }
    }
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>> v;
        vector<int> tmp;
        dfs(v, tmp, n, k, 0);
        return v;
    }
};
