Given a set of distinct integers, nums, return all possible subsets (the power set).

Note: The solution set must not contain duplicate subsets.

Example:

Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]


-------------------------------------------
class Solution {
public:
    void dfs(vector<vector<int>> &v, vector<int> &tmp, vector<int> &nums, int k) {
        v.push_back(tmp);
        for (int i = k + 1; i < nums.size(); i++) {
            tmp.push_back(nums[i]);
            dfs(v, tmp, nums, i);
            tmp.pop_back();
        }
        return;
    }
    vector<vector<int>> subsets(vector<int>& nums) {
        vector<vector<int>> v;
        vector<int> tmp;
        dfs(v, tmp, nums, -1);
        return v;
    }
};
