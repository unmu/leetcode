Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]


-------------------------------------------------------
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        if (nums.size() < 3) {
            return {};
        }
        vector<vector<int>> v;
        sort(nums.begin(), nums.end());
        for (int i = 0; i < nums.size() - 1; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            int target = 0 - nums[i], high = nums.size() - 1, low = i + 1;
            while (high > low) {
                int sum = nums[high] + nums[low];
                if (sum > target) {
                    high--;
                } else if (sum < target) {
                    low++;
                } else {
                    v.push_back({nums[i], nums[low], nums[high]});
                    low++;
                    high--;
                    while (high > low && nums[high] == nums[high + 1]) {
                        high--;
                    }
                    while (high > low && nums[low] == nums[low - 1]) {
                        low++;
                    }
                }
            }
        }
        return v;
    }
};
