Given a collection of distinct integers, return all possible permutations.

Example:

Input: [1,2,3]
Output:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]


---------------------------------------------------
class Solution {
public:
    void dfs(vector<vector<int>> &v, vector<int>& nums, int begin, int end) {
        if (begin == end) {
            v.push_back(nums);
            return;
        }
        for (int i = begin; i <= end; i++) {
            swap(nums[begin], nums[i]);
            dfs(v, nums, begin + 1, end);
            swap(nums[begin], nums[i]);
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> v;
        dfs(v, nums, 0, nums.size() - 1);
        return v;
    }
};
