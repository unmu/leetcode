Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 

Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.


------------------------------------------------------
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int ans = 0, k = -1;
        vector<int> v(256, -1);
        for (int i = 0; i < s.length(); i++) {
            if (v[s[i]] > k) {
                k = v[s[i]];
            }
            ans = max(ans, i - k);
            v[s[i]] = i;
        }
        return ans;
    }
};
