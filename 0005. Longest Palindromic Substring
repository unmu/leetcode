Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.

Example 2:

Input: "cbbd"
Output: "bb"


-----------------------------------------------------

class Solution {
public:
    string longestPalindrome(string s) {
        if (s.length() <= 1) {
            return s;
        }
        int l = 0, r = 0, mlen = 0, ml = 0;
        for (int i = 0; i < s.length() && s.length() - i > mlen / 2;) {
            r = l = i;
            while (r < s.length() - 1 && s[r] == s[r + 1]) {
                r++;
            }
            i = r + 1;
            while (l >= 1 && r < s.length() - 1 && s[l - 1] == s[r + 1]) {
                l--;
                r++;
            }
            if (r - l + 1 > mlen) {
                mlen = r - l + 1;
                ml = l;
            }
        }
        return s.substr(ml, mlen);
    }
};
